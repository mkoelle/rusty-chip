name: Continuous Integration

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  list-projects:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo "::set-output name=matrix::$(ls -d projects/* | jq -R -s -c 'split("\n")[:-1]')"

  rust-checks:
    name: Rust Checks
    runs-on: ubuntu-latest
    needs: list-projects
    strategy:
      fail-fast: false
      matrix:
        manifest: ${{ fromJson(needs.list-projects.outputs.matrix) }}
        action:
          - command: build
            args: --release
          - command: fmt
            args: --all -- --check --color always
          - command: clippy
            args: --all-targets --all-features --workspace -- -D warnings
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: esp-rs/xtensa-toolchain@v1.6
        with:
          default: true
          buildtargets: esp32
          ldproxy: true
      - name: Enable caching
        uses: Swatinem/rust-cache@v2
      - name: Change to project directory
        working-directory: ${{ matrix.manifest }}
        run: pwd
      - name: Run command
        run: cargo ${{ matrix.action.command }} ${{ matrix.action.args }}
